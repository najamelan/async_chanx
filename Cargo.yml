package:

  # When releasing to crates.io:
  #
  # - last check for all TODO, FIXME, expect, unwrap, todo!, unreachable!.
  # - recheck log statements (informative, none left that were just for development, ...)
  # - `cargo +nightly doc --no-deps --all-features --open` and re-read and final polish of documentation.
  #
  # - Update CHANGELOG.md.
  # - Update version numbers in Cargo.yml, Cargo.toml, install section of readme.
  #
  # - `touch **.rs && cargo clippy --tests --examples --benches --all-features`
  # - `cargo update`
  # - `cargo outdated --root-deps-only`
  # - `cargo audit`
  # - `cargo udeps --all-targets --all-features`
  # - `cargo crev crate verify --show-all --recursive` and review.
  # - 'cargo test --all-targets --all-features'
  #
  # - push dev and verify CI result
  # - check code coverage
  # - `cargo test` on dependent crates
  #
  # - cargo publish
  # - `git checkout master && git merge dev --no-ff`
  # - `git tag x.x.x` with version number.
  # - `git push && git push --tags`
  #
  version       : 0.1.0-alpha.5
  name          : async_chanx
  authors       : [ Naja Melan <najamelan@autistici.org> ]
  description   : Implement `Sink` for some channel implementations.
  documentation : https://docs.rs/async_chanx
  repository    : https://github.com/najamelan/async_chanx
  readme        : README.md
  keywords      : []
  categories    : []
  license       : Unlicense
  edition       : '2021'

  exclude       : [ benches, examples, tests ]

  metadata:
    docs:
      rs:
        all-features: true
        targets     : []


badges:

  maintenance : { status     : actively-developed    }
  travis-ci   : { repository : najamelan/async_chanx }


features:

  tokio: [tokio_crate, tokio-stream]

dependencies:

  # Public dependencies (bump major if changing any version number here)
  # Means we use types from these crates in our public API.
  #
  # futures-core : ^0.3
  futures-sink : ^0.3
  tokio_crate  : { package: tokio, optional: true, version: ^1, features: [ sync ] }
  tokio-stream : { version: ^0.1, optional: true }
  # async-channel: ^1

  # Private dependencies
  #
  # parking_lot: ^0.11

dev-dependencies:

  pretty_assertions : ^1
  assert_matches    : ^1
  criterion         : ^0.4
  async_executors   : { version: ^0.6, features: [ async_std, localpool ] }
  tokio_crate       : { package: tokio, version: ^1, features: [ sync ] }
  futures-test      : ^0.3
  futures           : ^0.3

build-dependencies:

  rustc_version: ^0.4


bench:

  - name   : bounded
    path   : benches/bounded.rs
    harness: false

  - name   : spsc
    path   : benches/spsc.rs
    harness: false
